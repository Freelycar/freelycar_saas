buildscript {
    ext {
        springBootVersion = '2.1.1.RELEASE'
    }
    repositories {
        maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'org.hidetake:gradle-ssh-plugin:2.10.1'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'
apply plugin: 'org.hidetake.ssh'

group = 'com.freelycar.saas'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven {
        url 'http://maven.aliyun.com/nexus/content/groups/public/'
    }
    mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-cache')
    compile('org.springframework.boot:spring-boot-starter-websocket')
//    compile('org.springframework.boot:spring-boot-starter-thymeleaf')

    compile('mysql:mysql-connector-java')
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'

    // https://mvnrepository.com/artifact/com.alibaba/druid-spring-boot-starter
    compile group: 'com.alibaba', name: 'druid-spring-boot-starter', version: '1.1.10'

    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.49'

    //jwt
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

    // org.apache.cxf
    compile group: 'org.apache.cxf', name: 'cxf-rt-frontend-jaxws', version: '3.2.7'
    compile group: 'org.apache.cxf', name: 'cxf-rt-transports-http', version: '3.2.7'
    compile group: 'org.apache.cxf', name: 'cxf-rt-transports-http-jetty', version: '3.2.7'

    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.6'

    // https://mvnrepository.com/artifact/io.springfox/springfox-swagger2
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    // https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'

    // https://mvnrepository.com/artifact/net.coobird/thumbnailator
    compile group: 'net.coobird', name: 'thumbnailator', version: '0.4.8'

    // lombok
    annotationProcessor 'org.projectlombok:lombok:1.18.4'
    compileOnly 'org.projectlombok:lombok:1.18.4'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.4'
    testCompileOnly 'org.projectlombok:lombok:1.18.4'

    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.13.1'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.3.1'

    // easypoi
    compile group: 'cn.afterturn', name: 'easypoi-base', version: '4.0.0'
    compile group: 'cn.afterturn', name: 'easypoi-annotation', version: '4.0.0'
    compile group: 'cn.afterturn', name: 'easypoi-web', version: '4.0.0'

    //devtools
    compile('org.springframework.boot:spring-boot-devtools')

    //tomcat
    providedCompile("org.springframework.boot:spring-boot-starter-tomcat")

    //test
    testCompile('org.springframework.boot:spring-boot-starter-test')

}


ssh.settings {
    knownHosts = allowAnyHosts
}

//短期内为了安全，密码删除（后面项目如果转private，再考虑直接写在这里）
remotes {
    deployServer {
        host = 'freelycar.com'
        user = 'Administrator'
        password = ''
    }
}


task shutdown() {
    ssh.run {
        session(remotes.deployServer) {
            println 'stop service ...'
            execute '/cygdrive/c/winsw/stop.bat'
        }
    }
}
task backAnddel(dependsOn:shutdown) {
    ssh.run {
        session(remotes.deployServer) {
            println 'start deleting...'
            executeScript '''#!/bin/sh
                        current=`date "+%Y%m%d%H%M%S"`
                        backupname=saas.$current
                        cp /cygdrive/c/winsw/saas.jar /cygdrive/c/winsw/backup/$backupname 
                        rm -r /cygdrive/c/winsw/saas.jar
                    '''
        }
    }
}

task copyToServer(dependsOn:backAnddel) {
    ssh.run {
        session(remotes.deployServer) {
            println 'start copying jar...'
            put from: 'build/libs/freelycar_saas-' + version + '.jar', into: '/cygdrive/c/winsw/saas.jar'
        }
    }
}

task deploy(dependsOn:copyToServer) {
    ssh.run {
        session(remotes.deployServer) {
            println 'start service...'
            execute '/cygdrive/c/winsw/start.bat'
        }
    }
}
