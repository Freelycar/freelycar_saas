buildscript {
    ext {
        springBootVersion = '2.1.1.RELEASE'
        sshPluginVersion = '2.10.1'
    }
    repositories {
        maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.hidetake:gradle-ssh-plugin:${sshPluginVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'
apply plugin: 'org.hidetake.ssh'

group = 'com.freelycar.saas'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven {
        url 'http://maven.aliyun.com/nexus/content/groups/public/'
    }
    maven {
        url 'http://mvn.leancloud.cn/nexus/content/repositories/public/'
    }
    mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-cache')
    compile('org.springframework.boot:spring-boot-starter-websocket')
//    compile('org.springframework.boot:spring-boot-starter-thymeleaf')

    compile('mysql:mysql-connector-java')
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'

    // https://mvnrepository.com/artifact/com.alibaba/druid-spring-boot-starter
    compile group: 'com.alibaba', name: 'druid-spring-boot-starter', version: '1.1.10'

    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.49'

    //jwt
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

    // org.apache.cxf
    compile group: 'org.apache.cxf', name: 'cxf-rt-frontend-jaxws', version: '3.2.7'
    compile group: 'org.apache.cxf', name: 'cxf-rt-transports-http', version: '3.2.7'
    compile group: 'org.apache.cxf', name: 'cxf-rt-transports-http-jetty', version: '3.2.7'

    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.6'

    // https://mvnrepository.com/artifact/io.springfox/springfox-swagger2
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    // https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'

    // https://mvnrepository.com/artifact/net.coobird/thumbnailator
    compile group: 'net.coobird', name: 'thumbnailator', version: '0.4.8'

    // lombok
    annotationProcessor 'org.projectlombok:lombok:1.18.4'
    compileOnly 'org.projectlombok:lombok:1.18.4'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.4'
    testCompileOnly 'org.projectlombok:lombok:1.18.4'

    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.13.1'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.3.1'

    // easypoi
    compile group: 'cn.afterturn', name: 'easypoi-base', version: '4.0.0'
    compile group: 'cn.afterturn', name: 'easypoi-annotation', version: '4.0.0'
    compile group: 'cn.afterturn', name: 'easypoi-web', version: '4.0.0'


    // LeanCloud Java SDK 老版本
    compile("cn.leancloud:java-sdk:0.2.1")
    // LeanCloud Java Unified SDK 2019-09正式上线这里备用（届时需要按照官方最新文档重新实现业务代码)
    // https://github.com/leancloud/java-unified-sdk
//    compile("cn.leancloud:storage-core:5.0.15")

    // devtools
    compile('org.springframework.boot:spring-boot-devtools')

    // tomcat
    providedCompile("org.springframework.boot:spring-boot-starter-tomcat")

    // test
    testCompile('org.springframework.boot:spring-boot-starter-test')

}

task stopBootRun(type: Exec) {
    workingDir './'
    commandLine "curl", "-X", "POST", "http://127.0.0.1:8080/actuator/shutdown"
}


//自动化部署任务配置
ssh.settings {
    knownHosts = allowAnyHosts
}

//短期内为了安全，密码删除（后面项目如果转private，再考虑直接写在这里）
remotes {
    deployServer {
        host = 'freelycar.com'
        user = 'Administrator'
        // 支持password、rsa等方式登录
        password = ''
//        identity = file("${rootDir}/id_rsa")
    }
}

// 定义一个获取当前时间字符串的辅助函数
static def now() {
    new Date().format('yyyyMMddHHmmss')
}

// 定一个pkg任务
task pkg
pkg.dependsOn 'clean'
pkg.dependsOn 'bootJar'
pkg.dependsOn 'stopRemoteJar'
bootJar.shouldRunAfter 'clean'
task stopRemoteJar(type: Exec) {
    if (remotes.deployServer.password == '') {
        commandLine "echo", "ssh远程密码为空，不能执行操作"
    } else {
        commandLine "echo", "当前填写的ssh密码为：" + remotes.deployServer.password + "，将执行优雅停服操作"
        workingDir './'
        commandLine "curl", "-X", "POST", "https://freelycar.com/api/actuator/shutdown"
    }
}
// 定义自动部署脚本
task deploy(dependsOn: pkg) {
    doLast {
        println("开始执行远程部署task，当前时间为:${now()}")
        ssh.run {
            session(remotes.deployServer) {
                // 备份原有程序，首次部署mv会执行失败，忽略错误
                execute "cp /cygdrive/c/winsw/saas.jar /cygdrive/c/winsw/backup/saas.${now()}", ignoreError: true
                // 上传新版本程序
                put from: 'build/libs/freelycar_saas-' + version + '.jar', into: '/cygdrive/c/winsw/saas.jar'
                // 启动新服务
                execute '/cygdrive/c/winsw/start.bat'
            }
        }
    }
}

task restartRemoteServer(dependsOn: stopRemoteJar) {
    doLast {
        println("start task restartRemoteServer:${now()}")
        ssh.run {
            session(remotes.deployServer) {
                // 启动新服务
                execute '/cygdrive/c/winsw/start.bat'
            }
        }
    }
}